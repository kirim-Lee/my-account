datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  bankAccounts  BankAccount[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model BankAccount {
  id Int @id @default(autoincrement())
  created DateTime @default(now())
  updated DateTime @updatedAt
  bank Bank? @relation(fields: [bankId], references: [id], onDelete: SetNull) 
  bankId Int?
  startDate DateTime @db.Date @default(now())
  endDate DateTime @db.Date @default(now())
  period Int?
  periodType PeriodType @default(MONTH)
  savingQuant Int @default(0) // 불입액
  quant Int @default(0)// 총 불입액
  interest Float?
  interestQuant Int @default(0) // 이자(세전)
  type AccountType @default(DEPOSIT)
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum PeriodType {
  DAY
  WEEK
  MONTH
}

enum AccountType {
  SAVINGS
  DEPOSIT
}

model Bank {
  id Int @id @default(autoincrement())
  name String
  bank BankAccount[]
}